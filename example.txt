Turtle Run! 

1. roscore  "run the ROS"
2. rosrun turtlesim turtlesim_node  "turtlesim"
3. rosrun turtlesim turtle_teleop_key  "keyboard control"
4. rqt_graph  "show the nodes"  "/turtle1/cmd_vel"
5. rostopic list -v  "show the message type"
6. rostopic echo /turtle1/cmd_vel  "move turtle, get message"
8. rostopic pub -r 10 /turtle1/cmd_vel geometry_msgs/Twist


Launch file:
1. roslaunch turtlesim.launch



KUKA Run!

1. roscore
2. roslaunch kmriiwa_gazebo kmriiwa_test_zone.launch "remember source devel/setup.bash"
3. rosmsg info geometry_msgs/Twist
4. rostopic pub -r 10 /kmriiwa/base/command/cmd_vel geometry_msgs/Twist
5. rosrun kmriiwa_moving base_moving.py 


Xarm Run!

1. roslaunch xarm_gazebo xarm7_beside_table.launch [run_demo:=true] [add_gripper:=true] [add_vacuum_gripper:=true] 


source devel/setup.bash

roscore -p 30001

roslaunch kmriiwa_bringup kmriiwa_bringup.launch

rostopic pub -r 10 /kmriiwa/arm/command/JointPosition kmriiwa_msgs/JointPosition

chmod +x *.py

rosrun rqt_robot_steering rqt_robot_steering


rostopic pub -r 10 /kmriiwa/arm/command/JointPosition kmriiwa_msgs/JointPosition "header:
  se: 0
  stamp: {secs: 0, nsecs: 0}
  frame_id: ''
a1: 1.5
a2: 1.3
a3: 0.5
a4: -0.7
a5: 0.2
a6: 0.0
a7: 0.0" 

ROS_Source:
nano ~/.bashrc



Map_Navigation:

1.To create a map for navigation start gmapping first:  
  roslaunch kmriiwa_navigation gmapping.launch
2.To save the map to your disk:
  rosrun map_server map_saver -f <map_name>
3.To use the navigaion stack in an known map use:
  roslaunch kmriiwa_navigation map_navigation.launch rviz:=true map_file:=/home/yfl/CAIS_WS/src/kmriiwa_ros_stack/kmriiwa_navigation/maps/CAIS_lab.yaml